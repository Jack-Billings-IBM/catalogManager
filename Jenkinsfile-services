pipeline {
    agent {
        label 'master'
    }
    tools {
        jdk "JDK8"
    }
    stages {
        stage('Update Copybooks on z/OS') {
            steps {
                ftpPublisher alwaysPublishFromMaster: false, continueOnError: false, masterNodeName: '', paramPublish: [parameterName:""], failOnError: false, publishers: [[configName: 'zOS', transfers: [[asciiMode: true, cleanRemote: false, excludes: '', flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: "'DFH540.CICS.SDFHSAMP'", remoteDirectorySDF: false, removePrefix: 'copybooks', sourceFiles: 'copybooks/*']], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false]]
            }
        }
        stage('Ceate sar File') {
            steps {
                sh "zconbt/bin/zconbt --properties=properties/inquireSingle.properties --file=inquireSingle/inquireSingle.sar"
                sh "zconbt/bin/zconbt --properties=properties/inquireCatalog.properties --file=inquireCatalog/inquireCatalog.sar"
                sh "zconbt/bin/zconbt --properties=properties/placeOrder.properties --file=placeOrder/placeOrder.sar"
            }
        }
        
        stage("Deploy sar Files") {
            steps {
                ftpPublisher alwaysPublishFromMaster: false, continueOnError: false, failOnError: false, masterNodeName: '', paramPublish: null, publishers: [[configName: 'zOS', transfers: [[asciiMode: false, cleanRemote: false, excludes: '', flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/var/zosconnect/servers/catalogManager/resources/zosconnect/services', remoteDirectorySDF: false, removePrefix: 'inquireSingle', sourceFiles: 'inquireSingle/inquireSingle.sar']], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false]]
                ftpPublisher alwaysPublishFromMaster: false, continueOnError: false, failOnError: false, masterNodeName: '', paramPublish: null, publishers: [[configName: 'zOS', transfers: [[asciiMode: false, cleanRemote: false, excludes: '', flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/var/zosconnect/servers/catalogManager/resources/zosconnect/services', remoteDirectorySDF: false, removePrefix: 'inquireCatalog', sourceFiles: 'inquireCatalog/inquireCatalog.sar']], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false]]
                ftpPublisher alwaysPublishFromMaster: false, continueOnError: false, failOnError: false, masterNodeName: '', paramPublish: null, publishers: [[configName: 'zOS', transfers: [[asciiMode: false, cleanRemote: false, excludes: '', flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/var/zosconnect/servers/catalogManager/resources/zosconnect/services', remoteDirectorySDF: false, removePrefix: 'placeOrder', sourceFiles: 'placeOrder/placeOrder.sar']], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false]]
            }
        }
        
        stage("Test Services") {
            steps {
                sh 'curl --location --request POST \'http://10.1.1.2:9080/zosConnect/services/inquireSingle?action=invoke\' --fail --header \'Content-Type: application/json\' --data \'{ "DFH0XCP4": { "inquireSingle":{ "itemID": 20 } } }\''
                sh 'curl --location --request POST \'http://10.1.1.2:9080/zosConnect/services/inquireCatalog?action=invoke\' --fail --header \'Content-Type: application/json\' --data \'{ "DFH0XCP3": {"inquireCatalog": { "startItemID": 20 } } }\''
                sh 'curl --location --request POST \'http://10.1.1.2:9080/zosConnect/services/placeOrder?action=invoke\' --fail --header \'Content-Type: application/json\' --data \'{ "DFH0XCP5": { "orderRequest":{ "itemID": 70, "orderQuantity": 1 } } }\''
            }
        }
        
        stage("Push to GitHub") {
            steps {
                //git changelog: false, credentialsId: 'git', poll: false, url:'https://github.com/Jack-Billings-IBM/catalogManager'
                //sh "zconbt/bin/zconbt --projectDirectory=inquireSingle --file=inquireSingle/inquireSingle.sar"
                //sh "zconbt/bin/zconbt --projectDirectory=inquireCatalog --file=inquireCatalog/inquireCatalog.sar"
                //sh "zconbt/bin/zconbt --projectDirectory=placeOrder --file=placeOrder/placeOrder.sar"
                sh "git config --global user.email 'jack.billings@ibm.com'"
                sh "git config --global user.name 'Jack-Billings-IBM'"
                sh "git add -A"
                sh "git commit -m 'new sar file'"
                //need to add git credentials to jenkins
                withCredentials([usernamePassword(credentialsId: 'git', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]){    
                    sh('''
                        git config --local credential.helper "!f() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; f"
                        git push origin HEAD:master
                    ''')
                }
            }
        }
    }
}                
